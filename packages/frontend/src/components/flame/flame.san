<template>
    <div id="sand-d3-flame-container" class="sand-d3-flame-container"></div>
</template>

<script>
    import san, { DataTypes } from 'san';
    import * as d3 from "d3";
    import { flamegraph, defaultFlamegraphTooltip } from 'd3-flame-graph';
    import 'd3-flame-graph/dist/d3-flamegraph.css';

    export default {
        dataTypes: {
            /* props */
            theme: DataTypes.string, // 主题颜色
            flameWidth: DataTypes.number, // svg 宽度
            tipFn: DataTypes.func, // tooltip 样式
            inverted: DataTypes.bool, // 倒立
            flameSearch: DataTypes.func, // (searchResults, searchSum, totalValue) => {}
            flameSearchMatch: DataTypes.func, // (d, term) => {}
            data: DataTypes.object, // 火焰图数据
            highlightColor: DataTypes.string // 搜索结果高亮之后的颜色
        },

        initData() {
            return {
                filterText: ''
            }
        },

        attached() {
            let {
                tipFn,
                flameWidth,
                inverted,
                theme,
                flameSearch,
                highlightColor,
                flameSearchMatch
            } = this.data.get();
            // 初始化火焰图 tootip
            let tip = defaultFlamegraphTooltip().html(tipFn);
            // 初始化火焰图容器
            this.chart = flamegraph()
                .tooltip(tip)
                .width(flameWidth) // svg 宽度
                .inverted(inverted) // 倒立
                .setColorHue(theme) // 主题颜色
                .onClick(this.onClick.bind(this)) // 点击
                // 搜索高亮颜色
                .setColorMapper(function(d, originalColor) {
                    return d.highlight ? highlightColor : originalColor;
                });
            // 获取搜索结果
            if (typeof flameSearch === 'function') {
                this.chart.setSearchHandler(flameSearch);
            }
            // 搜索匹配配置
            if (typeof flameSearchMatch === 'function') {
                this.chart.setSearchMatch(flameSearchMatch);
            }
            // 搜索火焰图数据
            this.watch('filterText', value => {
                this.chart.search(value);
            });
            // 数据更新，重新渲染火焰图
            this.watch('data', data => {
                d3.select("#sand-d3-flame-container")
                    .datum(data)
                    .call(this.chart);
            });
        },

        onClick(d) {
            this.fire('click', d);
        }
    }
</script>

<style lang="less">
    .sand-d3-flame-container {
        display: flex;
        justify-content: center;
        padding: 100px 0;
        overflow: auto;
    }
</style>
