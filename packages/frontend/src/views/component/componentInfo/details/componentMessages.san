<template>
    <div class="san-devtools-messages-wrapper">
        <div class="messages {{hidden[index] ? 'hidden' : ''}}" s-for="item, index in data">
            <div class="func-name">{{item.name}}</div>
            <san-pretty-code fnStr="{{item.fn}}"></san-pretty-code>
        </div>
    </div>
</template>

<script>
    import san, { DataTypes } from 'san';
    import PrettyCode from '@frontend/components/prettyCode/prettyCode.san';

    export default {
        components: {
            'san-pretty-code': PrettyCode
        },


        initData() {
            return {
                hidden: []
            }
        },

        dataTypes: {
            /* props */
            data: DataTypes.arrayOf(DataTypes.object),
            filterText: DataTypes.string,
            /* state */
            hidden: DataTypes.arrayOf(DataTypes.bool)
        },

        attached() {
            this.filter(this.data.get('filterText'));
            this.watch('filterText', value => {
                this.filter(value);
            });
        },

        filter(value) {
            let text = value.trim();
            for (let j = 0; j < this.data.get('hidden').length; j++) {
                this.data.set('hidden[' + j + ']', false);
            }
            if (!text) {
                return;
            }
            let messages = this.el.querySelectorAll('.messages');
            messages.forEach((e, i) => {
                if (!e.innerText.match(new RegExp(text, 'i'))) {
                    this.data.set('hidden[' + i + ']', true);
                }
            });
        }

    };
</script>

<style lang="less">
    @import '@frontend/views/style/variables.less';
    .san-devtools-messages-wrapper {
        .hidden {
            display: none;
        }
        .messages {
            margin: 3px 0;
            .func-name {
                color: @func-font-color;
                font-size: 120%;
                margin-bottom: 5px;
            }
        }
    }

    .san-devtools-dark {
        .san-devtools-messages-wrapper {
            .messages {
                .func-name {
                    color: @dark-func-font-color;
                }
            }
        }
    }
</style>
