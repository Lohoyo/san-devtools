<template>
    <div class="san-devtools-computed-wrapper">
        <div class="computed {{hidden[index] ? 'hidden' : ''}}" s-for="item, index in computed">
            <div class="func-name">{{item.computedName}}</div>
            <div class="deps-wrapper">
                <span s-for="dep in item.deps" class="deps">
                    <span class="key-value">{{dep.key}}</span>
                </span>
            </div>
            <san-pretty-code fnStr="{{item.fn}}"></san-pretty-code>
        </div>
    </div>
</template>

<script>
    import san, { DataTypes } from 'san';
    import PrettyCode from '@frontend/components/prettyCode/prettyCode.san';

    export default {
        components: {
            'san-pretty-code': PrettyCode
        },

        initData() {
            return {
                hidden: []
            }
        },

        dataTypes: {
            /* props */
            computed: DataTypes.arrayOf(DataTypes.object),
            filterText: DataTypes.string,
            /* state */
            hidden: DataTypes.arrayOf(DataTypes.bool),
        },

        attached() {
            this.filter(this.data.get('filterText'));
            this.watch('filterText', value => {
                this.filter(value.trim());
            });
        },

        filter(text) {
            for (let j = 0; j < this.data.get('hidden').length; j++) {
                this.data.set('hidden[' + j + ']', false);
            }
            if (!text) {
                return;
            }
            let computed = this.el.querySelectorAll('.computed');
            computed.forEach((e, i) => {
                if (!e.innerText.match(new RegExp(text, 'i'))) {
                    this.data.set('hidden[' + i + ']', true);
                }
            });
        }

    };
</script>

<style lang="less">
    @import '@frontend/views/style/variables.less';
    .san-devtools-computed-wrapper {
        .hidden {
            display: none;
        }
        .computed {
            margin: 3px 0;
            .func-name {
                color: @func-font-color;
                font-size: 120%;
                margin-bottom: 5px;
            }
            .deps-wrapper {
                line-height: 180%;
                .deps {
                    display: inline-block;
                    white-space: nowrap;
                    margin-right: 20px;
                    span {
                        font-size: 12px;
                        height: 20px;
                        box-sizing: border-box;
                        padding: 3px 8px;
                        border-radius: 12px;
                        border: 1px solid @tag-color;
                        &.key-value {
                            color: @tag-color;
                        }
                    }
                }
            }
        }
    }

    .san-devtools-dark {
        .san-devtools-computed-wrapper {
            .computed {
                .func-name {
                    color: @dark-func-font-color;
                }
            }
        }
    }
</style>
